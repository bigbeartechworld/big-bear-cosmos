cosmos-installer: null
name: big-bear-ayon
services:
  "{ServiceName}-big-bear-ayon":
    container_name: "{ServiceName}-big-bear-ayon"
    image: ynput/ayon:1.3.6-20240823
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:5000/api/info
      interval: 10s
      timeout: 2s
      retries: "3"
    volumes:
      - "{ServiceName}-big-bear-ayon-data:/addons"
      - "{ServiceName}-big-bear-ayon-data-2:/storage"
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 5000:5000
    expose:
      - "5000"
    networks:
      - big-bear-ayon-network
    depends_on:
      - "{ServiceName}-postgres"
      - "{ServiceName}-redis"
    hostname: "{ServiceName}-big-bear-ayon"
  "{ServiceName}-postgres":
    image: postgres:15-alpine
    container_name: "{ServiceName}-postgres"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ayon
      - POSTGRES_PASSWORD=ayon
      - POSTGRES_DB=ayon
    volumes:
      - "{ServiceName}-postgres-data:/var/lib/postgresql/data"
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ayon
      interval: 10s
      timeout: 5s
      retries: "5"
    expose:
      - "5432"
    networks:
      - big-bear-ayon-network
    hostname: "{ServiceName}-postgres"
  "{ServiceName}-redis":
    image: redis:7-alpine
    container_name: "{ServiceName}-redis"
    restart: unless-stopped
    volumes:
      - "{ServiceName}-redis-data:/data"
    healthcheck:
      test:
        - CMD-SHELL
        - redis-cli ping | grep PONG
      interval: 5s
      timeout: 5s
      retries: "5"
    expose:
      - "6379"
    networks:
      - big-bear-ayon-network
    hostname: "{ServiceName}-redis"
networks:
  big-bear-ayon-network:
    driver: bridge
minVersion: 0.14.0
