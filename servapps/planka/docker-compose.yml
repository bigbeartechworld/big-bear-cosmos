cosmos-installer: null
name: big-bear-planka
services:
  "{ServiceName}-big-bear-planka":
    container_name: "{ServiceName}-big-bear-planka"
    image: ghcr.io/plankanban/planka:1.16.3
    restart: unless-stopped
    volumes:
      - "{ServiceName}-big-bear-planka-data:/app/public/user-avatars"
      - "{ServiceName}-big-bear-planka-data-2:/app/public/project-background-im\
        ages"
      - "{ServiceName}-big-bear-planka-data-3:/app/private/attachments"
    ports:
      - 3000:1337
    environment:
      - BASE_URL=http://[YOUR_CASAOS_LAN_IP]:3000
      - DATABASE_URL=postgresql://postgres@big-bear-planka-postgres/planka
      - SECRET_KEY=notsecretkey
      - DEFAULT_ADMIN_EMAIL=demo@demo.demo
      - DEFAULT_ADMIN_PASSWORD=demo
      - DEFAULT_ADMIN_NAME=Demo Demo
      - DEFAULT_ADMIN_USERNAME=demo
    networks:
      - big-bear-planka-network
    depends_on:
      big-bear-planka-postgres:
        condition: service_healthy
    hostname: "{ServiceName}-big-bear-planka"
  "{ServiceName}-big-bear-planka-postgres":
    image: postgres:14-alpine
    restart: on-failure
    volumes:
      - "{ServiceName}-big-bear-planka-postgres-data:/var/lib/postgresql/data"
    environment:
      - POSTGRES_DB=planka
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - big-bear-planka-network
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d planka
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: "{ServiceName}-big-bear-planka-postgres"
    hostname: "{ServiceName}-big-bear-planka-postgres"
networks:
  big-bear-planka-network:
    driver: bridge
minVersion: 0.14.0
