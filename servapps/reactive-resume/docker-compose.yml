cosmos-installer: null
name: big-bear-reactive-resume
services:
  "{ServiceName}-app":
    container_name: "{ServiceName}-app"
    image: amruthpillai/reactive-resume:v4.1.7
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      - "{ServiceName}-postgres"
      - "{ServiceName}-minio"
      - "{ServiceName}-redis"
      - "{ServiceName}-chrome"
    networks:
      - reactive-resume-network
    environment:
      PORT: "3000"
      NODE_ENV: production
      PUBLIC_URL: http://[CASAOS_IP]:3000
      STORAGE_URL: http://[CASAOS_IP]:9000/default
      CHROME_TOKEN: chrome_token
      CHROME_URL: ws://chrome:3000
      DATABASE_URL: postgresql://postgres:postgres@{ServiceName}-postgres:5432/postgres
      ACCESS_TOKEN_SECRET: access_token_secret
      REFRESH_TOKEN_SECRET: refresh_token_secret
      MAIL_FROM: noreply@localhost
      STORAGE_ENDPOINT: "[CASAOS_IP]"
      STORAGE_PORT: "9000"
      STORAGE_REGION: us-east-1
      STORAGE_BUCKET: default
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin
      STORAGE_USE_SSL: "false"
      REDIS_URL: redis://default:password@redis:6379
    hostname: "{ServiceName}-app"
  "{ServiceName}-postgres":
    container_name: "{ServiceName}-postgres"
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - "{ServiceName}-postgres-data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d postgres
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - reactive-resume-network
    hostname: "{ServiceName}-postgres"
  "{ServiceName}-minio":
    container_name: "{ServiceName}-minio"
    image: minio/minio
    command:
      - server
      - /data
    restart: unless-stopped
    ports:
      - 9000:9000
    volumes:
      - "{ServiceName}-minio-data:/data"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - reactive-resume-network
    hostname: "{ServiceName}-minio"
  "{ServiceName}-chrome":
    container_name: "{ServiceName}-chrome"
    image: browserless/chrome:1.61.1-puppeteer-21.4.1
    restart: unless-stopped
    environment:
      TOKEN: chrome_token
      EXIT_ON_HEALTH_FAILURE: "true"
      PRE_REQUEST_HEALTH_CHECK: "true"
    networks:
      - reactive-resume-network
    hostname: "{ServiceName}-chrome"
  "{ServiceName}-redis":
    container_name: "{ServiceName}-redis"
    image: redis:alpine
    restart: unless-stopped
    command:
      - redis-server
      - --requirepass
      - password
    networks:
      - reactive-resume-network
    hostname: "{ServiceName}-redis"
networks:
  reactive-resume-network:
    driver: bridge
minVersion: 0.14.0
